#!/bin/bash
## $ReOpenLDAP$
## Copyright (c) 2015,2016 Leonid Yuriev <leo@yuriev.ru>.
## Copyright (c) 2015,2016 Peter-Service R&D LLC <http://billing.ru/>.
##
## This file is part of ReOpenLDAP.
##
## ReOpenLDAP is free software; you can redistribute it and/or modify it under
## the terms of the GNU Affero General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## ReOpenLDAP is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
##
## ---
##
## Copyright 1998-2014 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh

if test ${AC_conf[rwm]} = no ; then
	echo "rwm (Rewrite/remap) overlay not available, test skipped"
	exit 0
fi

echo ""

if test "x$RELAYS" = "x" ; then
	RELAYS=
	# back-relay
	if test ${AC_conf[relay]} = no ; then
		echo "relay backend not available, test skipped"
	else
		if test "x$RELAYS" != "x" ; then
			RELAYS="${RELAYS} "
		fi
		RELAYS="${RELAYS}relay"
	fi

	# back-ldap
	if test ${AC_conf[ldap]} = no ; then
		echo "ldap backend not available, test skipped"
	else
		if test "x$RELAYS" != "x" ; then
			RELAYS="${RELAYS} "
		fi
		RELAYS="${RELAYS}ldap"
	fi

	# back-meta
	if test ${AC_conf[meta]} = no ; then
		echo "meta backend not available, test skipped"
	else
		if test "x$RELAYS" != "x" ; then
			RELAYS="${RELAYS} "
		fi
		RELAYS="${RELAYS}meta"
	fi
fi

if test "x$RELAYS" = "x" ; then
	echo "no relaying capable backend is available"
	echo ">>>>> Test succeeded"
	exit 0
fi

echo "Testing virtual naming context mapping with $RELAYS backend(s)..."
echo ""

for RELAY in $RELAYS ; do
	update_TESTDIR $BASE_TESTDIR/$RELAY
	RUNIT=yes

	if test $RUNIT = yes ; then
		mkdir -p $TESTDIR $DBDIR1
		. ${TOP_SRCDIR}/tests/scripts/relay
	fi
done

echo ">>>>> Test succeeded"
exit 0

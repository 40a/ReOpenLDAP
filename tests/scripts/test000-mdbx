#!/bin/bash
# $ReOpenLDAP$
## Copyright (c) 2015,2016 Leonid Yuriev <leo@yuriev.ru>.
## Copyright (c) 2015,2016 Peter-Service R&D LLC <http://billing.ru/>.
##
## This file is part of ReOpenLDAP.
##
## ReOpenLDAP is free software; you can redistribute it and/or modify it under
## the terms of the GNU Affero General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## ReOpenLDAP is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
##
## ---
##
## Copyright 1998-2014 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. $SRCDIR/scripts/defines.sh

if [ "$BACKEND" != "mdb" ]; then
	echo "Test does not support $BACKEND backend, test skipped"
        exit 0
fi

troubles=no
LMDBDIR=$(readlink -f $SRCDIR/../libraries/liblmdb)

mkdir -p $TESTDIR
cd $TESTDIR
rm -rf testdb && mkdir testdb

for n in 0 1 2 3 4 5 6; do
	if [ ! -x ${LMDBDIR}/mtest${n} ]; then
		continue
	fi

	echo -n "*** LMDB-TEST-$n: "
	$TIMEOUT_S $VALGRIND_CMD ${LMDBDIR}/mtest${n} > mtest${n}.log
	RC=$?
	if [ $RC -eq 0 ]; then
		echo -n "passed"
	elif [ $RC -eq 134 ]; then
		echo "assertion/coredump"
		troubles=core
		break
	elif [ $RC -eq 43 ]; then
		echo "memleak"
		troubles=memleak
		break
	else
		echo -n "troubles"
		troubles=yes
	fi

	if [ ! -x ${LMDBDIR}/mdbx_chk ]; then
		echo ""
		continue
	fi

	echo -n ", mdbx_chk "
	$TIMEOUT_S $VALGRIND_CMD ${LMDBDIR}/mdbx_chk -vv testdb >> mtest${n}.log
	RC=$?
	if [ $RC -eq 0 ]; then
		echo "ok"
	elif [ $RC -eq 134 ]; then
		echo "coredump"
		troubles=core
		break
	elif [ $RC -eq 43 ]; then
		echo "memleak"
		troubles=memleak
		break
	else
		echo "broken"
		troubles=yes
	fi
done

if [ "$troubles" != "no" ]; then
	echo ">>>>> Test failed"
	exit 1
fi

echo ">>>>> Test succeeded"
exit 0
